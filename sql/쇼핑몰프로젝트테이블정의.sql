
-- 쇼핑몰 프로젝트 테이블 정의
-- 테이블 종류 ---
-- 1. 회원 정보 테이블
-- 2. 상품 카테고리 테이블
-- 3. 상품 정보 테이블
-- 4. 상품 이미지 정보 테이블
-- 5. 장바구니 정보 테이블
-- 6. 구매 정보 테이블

-- 1. 회원 정보 테이블
-- 권한 : USER, ADMIN
CREATE TABLE SHOP_MEMBER (
	MEM_ID VARCHAR(50) PRIMARY KEY
	, MEM_PW VARCHAR(100) NOT NULL
	, MEM_NAME VARCHAR(50) NOT NULL
	, MEM_TEL VARCHAR(30) UNIQUE
	, POST VARCHAR(10)
	, MEM_ADDR VARCHAR(50)
	, ADDR_DETAIL VARCHAR(100)
	, MEM_EMAIL VARCHAR(100)
	, MEM_ROLE VARCHAR(30) DEFAULT 'USER'
);

-- 이미지 인설트 쿼리
INSERT INTO ITEM_IMG (ORIGIN_FILE_NAME, ATTACHED_FILE_NAME, IS_MAIN, ITEM_CODE)
VALUES ('abc.jpg', 'aaa.jpg', 'Y', 1), ('abF.jpg', 'bbb.jpg', 'N', 1);

INSERT INTO 테이블명 () VALUES ();

-- 2.상품 카테고리(소설, 에세이, 인터넷/IT)
CREATE TABLE ITEM_CATEGORY (
	CATE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, CATE_NAME VARCHAR(50) NOT NULL UNIQUE
);

-- 카테고리 데이터
INSERT INTO item_category VALUES (1, '인터넷/IT');
INSERT INTO item_category VALUES (2, '소설/에세이');
INSERT INTO item_category VALUES (3, '자기계발');

-- 3. 상품 정보 테이블
-- ITEM_STATUS(상품 상태) : (FOR_SALE)판매중, SOLD_OUT(매진)
CREATE TABLE SHOP_ITEM (
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_NAME VARCHAR(50) NOT NULL UNIQUE
	, ITEM_PRICE INT NOT NULL
	, ITEM_INTRO VARCHAR(100)
	, ITEM_STOCK INT DEFAULT 20
	, ITEM_STATUS VARCHAR(10) DEFAULT 'FOR_SALE'
	, CATE_CODE INT NOT NULL REFERENCES ITEM_CATEGORY (CATE_CODE)
);


SELECT MEM_ID, MEM_PW, MEM_ROLE
        FROM SHOP_MEMBER
        WHERE MEM_ID='admin'
        AND MEM_PW='1111';
        
SELECT * FROM shop_member;

UPDATE shop_member
SET
MEM_ROLE = 'ADMIN'
, MEM_PW = '1111'
WHERE MEM_ID = 'admin';

SELECT * FROM item_category;

SELECT CATE_CODE
, CATE_NAME
FROM item_category
ORDER BY CATE_CODE ASC


-- ORIGIN_FILE_NAME :  원본 파일 명
-- ATTACHED_FILE_NAME : 첨부된 파일 명
-- IS_MAIN : 대표 이미지 여부 
-- 상품 이미지 정보 테이블
CREATE TABLE ITEM_IMG (
 IMG_CODE INT AUTO_INCREMENT PRIMARY KEY
 , ORIGIN_FILE_NAME VARCHAR(100) NOT NULL
 , ATTACHED_FILE_NAME VARCHAR (100) NOT NULL
 , IS_MAIN VARCHAR(5) NOT NULL
 , ITEM_CODE INT REFERENCES shop_item (ITEM_CODE) ON DELETE CASCADE
);



-- 장바구니 정보 테이블
CREATE TABLE SHOP_CART (
CART_CODE INT AUTO_INCREMENT PRIMARY KEY
, ITEM_CODE INT NOT NULL REFERENCES shop_item (ITEM_CODE)
, CART_CNT INT NOT NULL
, MEM_ID VARCHAR(50) NOT NULL REFERENCES shop_member (MEM_ID)
, CART_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);


SELECT * FROM ITEM_IMG;
SELECT * FROM shop_item;

-- 데이터 삭제 
DELETE FROM shop_item;

-- 상품 가격 변경하기
UPDATE shop_item
SET
ITEM_PRICE = 20000
WHERE ITEM_CODE = 3;

UPDATE shop_item
SET
ITEM_PRICE = 12000
WHERE ITEM_CODE = 4;

 SELECT ITEM.ITEM_CODE
        , ITEM_NAME
        , ITEM_PRICE
        , ATTACHED_FILE_NAME
        FROM shop_item ITEM, ITEM_IMG IMG
        WHERE ITEM.ITEM_CODE = IMG.ITEM_CODE
        AND IS_MAIN= 'Y'
        ORDER BY ITEM_CODE DESC;


-- 현재 저장된 item_cide의 가장 큰 값을 조회
SELECT MAX(ITEM_CODE)+1
FROM shop_item;

CREATE TABLE test_shop_item (
ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
, ITEM_NAME VARCHAR(50)
);

-- 조회
SELECT * FROM test_shop_item;

-- 내용을 추가
INSERT INTO test_shop_item (ITEM_NAME, ITEM_CODE) VALUES ('AAA', 2);
INSERT INTO test_shop_item (ITEM_NAME) VALUES ('AAA');

-- 다음에 INSERT 할때 들어갈 ITEM_CODE 조회
SELECT MAX(ITEM_CODE)+1 FROM test_shop_item;

-- 내용을 삭제 
DELETE FROM test_shop_item;

-- 데이터가 하나도 없다면 1을 조회 IFNULL(컬럼, 0)
SELECT IFNULL(MAX(ITEM_CODE), 0)+1 FROM test_shop_item;





SELECT ITEM.ITEM_CODE
, ITEM_NAME
, ITEM_PRICE
, ITEM_INTRO
, ATTACHED_FILE_NAME
, IS_MAIN
FROM shop_item ITEM, item_img IMG
WHERE ITEM.ITEM_CODE=IMG.ITEM_CODE
AND ITEM.ITEM_CODE=1;
 
 SELECT * FROM shop_item;
 
 
 -- 내장바구니에 현재 선택한 상품이 있는지 확인하는 쿼리
 SELECT CART_CODE
 FROM SHOP_CART
 WHERE ITEM_CODE=3
 AND MEM_ID='JAVA';
 
 
 
 -- 장바구니 상품의 수량 및 날짜 변경
 UPDATE shop_cart
 SET
 CART_CNT=CART_CNT+3,
 CART_DATE=NOW()
 WHERE ITEM_CODE=
 AND MEM_ID=;
 
 
 DELETE FROM shop_cart;
 
 DELETE FROM shop_cart;
 DELETE FROM shop_item;
 